<?xml version="1.0" encoding="utf-8"?>
<PROG NAME="ZGEOCODE_NOMINATIM_ZAKE_SVN" VARCL="X" SUBC="1" RSTAT="K" RMAND="000" RLOAD="E" FIXPT="X" UCCHECK="X">
 <textPool>
  <language SPRAS="E">
   <textElement ID="R" LENGTH="44 "/>
  </language>
 </textPool>
 <source>*&amp;---------------------------------------------------------------------*
*&amp; Report  ZGEOCODE_NOMINATIM_ZAKE_SVN
*&amp;
*&amp;---------------------------------------------------------------------*
*&amp;
*&amp;
*&amp;---------------------------------------------------------------------*

REPORT  zgeocode_nominatim_zake_svn.

TYPE-POOLS: abap.

CONSTANTS cl_svn TYPE seoclsname VALUE &apos;ZCL_ZAKE_SVN&apos;.
CONSTANTS cl_tortoise_svn TYPE seoclsname VALUE &apos;ZCL_ZAKE_TORTOISE_SVN&apos;.

DATA package TYPE devclass.
DATA lt_packages TYPE TABLE OF devclass.
DATA zake    TYPE REF TO zake.
DATA objects TYPE scts_tadir.
DATA object  LIKE LINE OF objects.
DATA objtype TYPE string.
DATA objname TYPE string.
DATA nuggetname TYPE string.
DATA comment_str TYPE string.
DATA loclpath_str TYPE string.
DATA svnpath_str TYPE string.
DATA username_str TYPE string.
DATA password_str TYPE string.
DATA class TYPE seoclsname.
DATA files TYPE string_table.
DATA file LIKE LINE OF files.

DATA: ex TYPE REF TO zcx_saplink,
      message TYPE string.

SELECTION-SCREEN BEGIN OF BLOCK a WITH FRAME TITLE a.
PARAMETERS:
  checkout TYPE flag RADIOBUTTON GROUP act,
  update   TYPE flag RADIOBUTTON GROUP act,
  install  TYPE flag RADIOBUTTON GROUP act,
  export   TYPE flag RADIOBUTTON GROUP act DEFAULT &apos;X&apos;,
  build    TYPE flag RADIOBUTTON GROUP act,
  checkin  TYPE flag RADIOBUTTON GROUP act.
SELECTION-SCREEN END OF BLOCK a.

SELECTION-SCREEN BEGIN OF BLOCK b WITH FRAME TITLE b.
PARAMETERS:
  svn      TYPE flag RADIOBUTTON GROUP cl,
  tortoise TYPE flag RADIOBUTTON GROUP cl DEFAULT &apos;X&apos;.
SELECTION-SCREEN END OF BLOCK b.

SELECTION-SCREEN BEGIN OF BLOCK c WITH FRAME TITLE c.
PARAMETERS:
  loclpath TYPE char512 DEFAULT &apos;C:/Projects/ZGEOCODE/&apos; LOWER CASE OBLIGATORY,
  nuggetna TYPE char512 DEFAULT &apos;C:/Projects/ZGEOCODE/build/ZGEOCODE.nugg&apos; LOWER CASE OBLIGATORY,
  wdanugg  TYPE char512 DEFAULT &apos;C:/Projects/ZGEOCODE/build/ZGEOCODE_WDA.nugg&apos; LOWER CASE OBLIGATORY,
  svnpath  TYPE char512 DEFAULT &apos;https://code.sdn.sap.com/svn/zgeocode/trunk&apos; LOWER CASE OBLIGATORY,
  revision TYPE i,
  comment  TYPE char512 DEFAULT &apos;&apos; LOWER CASE,
  testrun  TYPE flag    DEFAULT &apos;X&apos;.
SELECTION-SCREEN END OF BLOCK c.

INITIALIZATION.
  a = &apos;Action&apos;.
  b = &apos;Version Controll Program&apos;.
  c = &apos;Parameters&apos;.

START-OF-SELECTION.
* Loop around the Packages which are returned for the Select Options select
  svnpath_str  = svnpath.
  loclpath_str = loclpath.
  TRY.
      &quot; DDIC
      &quot; Structures
      object-object   = &apos;TABL&apos;.
      object-obj_name = &apos;ZCOMT_BSP_BP_OSM&apos;.
      APPEND object TO objects.
      object-obj_name = &apos;ZGEOCODE_BP_DIST&apos;.
      APPEND object TO objects.
      &quot; Table Types
      object-object   = &apos;TTYP&apos;.
      object-obj_name = &apos;ZGEOCODE_BP_DIST_TABLE&apos;.
      APPEND object TO objects.
      &quot; Classes
      object-object   = &apos;CLAS&apos;.
      object-obj_name = &apos;ZCL_GEOCODE_NOMINATIM&apos;.
      APPEND object TO objects.
      object-obj_name = &apos;ZCL_GEOCODE_HELPER&apos;.
      APPEND object TO objects.
      object-obj_name = &apos;ZCL_BSP_BP_OSM&apos;.
      APPEND object TO objects.
      object-obj_name = &apos;ZCL_GIS_ROUTE_YOURS&apos;.
      APPEND object TO objects.
      &quot; BSP
      object-object   = &apos;WAPA&apos;.
      object-obj_name = &apos;ZGEOCODE_OSM&apos;.
      APPEND object TO objects.
      object-obj_name = &apos;ZGEOCODE_MOBILE&apos;.
      APPEND object TO objects.
      &quot; Programms
      object-object   = &apos;PROG&apos;.
      object-obj_name = &apos;ZGEOCODE_NOMINATIM_ZAKE_SVN&apos;.
      APPEND object TO objects.
      object-obj_name = &apos;ZGEOCODE_NOMINATIM_READ_BP&apos;.
      APPEND object TO objects.
      object-obj_name = &apos;ZGEOCODE_NOMINATIM_TEST&apos;.
      APPEND object TO objects.
      object-obj_name = &apos;ZGEOCODE_NOMINATIM_TEST_SURR&apos;.
      APPEND object TO objects.
      object-obj_name = &apos;ZTEST_GIS_ROUTE_YOURS&apos;.
      APPEND object TO objects.
      &quot; Let add the README to the build ZIP.
      CONCATENATE loclpath &apos;README.txt&apos; INTO file.
      APPEND file TO files.
      CONCATENATE loclpath &apos;CREDITS.txt&apos; INTO file.
      APPEND file TO files.
      &quot; Add WDA Components to a seperate Build
      &quot; WebDynpro
      object-object   = &apos;WDYN&apos;.
      object-obj_name = &apos;ZGC_BP_OSM&apos;.
      APPEND object TO objects.
      &quot; WebDynpro Application
      object-object   = &apos;WDYA&apos;.
      object-obj_name = &apos;ZGC_BP_OSM&apos;.
      APPEND object TO objects.
*      &quot; Mime for Webdynpro
*      object-object   = &apos;SMIM&apos;.
*      object-obj_name = &apos;000C29BC2BF91ED19AAD05E635B9DA41&apos;.
*      APPEND object TO objects.

      IF svn = &apos;X&apos;.
        class = cl_svn.
      ELSE.
        class = cl_tortoise_svn.
      ENDIF.

      CREATE OBJECT zake
        TYPE
        (class)
        EXPORTING
          i_svnpath   = svnpath_str
          i_localpath = loclpath_str.
      zake-&gt;set_package( &apos;ZGEOCODE&apos; ).
      zake-&gt;set_checkin_objects( objects ).

      zake-&gt;add_files_to_zip(
        EXPORTING
          i_files = files    &quot; Table of Filenames
      ).

      &quot; Can&apos;t be used in the moment because Plugin for SICF does not work
      &quot; and no Plugin for SMIM Objects available
      &quot; zake-&gt;set_package_objects( &apos;ZAPP_INTEGRATOR&apos; ).

      nuggetname = nuggetna.
      IF update = abap_true.
        zake-&gt;update( ).
      ELSEIF checkout = abap_true.
        zake-&gt;checkout( revision ).
      ELSEIF install = abap_true.
        zake-&gt;install_slinkees_from_lm( testrun ).
        IF testrun IS INITIAL.
          LOOP AT objects INTO object.
            objtype = object-object.
            objname = object-obj_name.
            zake-&gt;activate(
                i_objtype = objtype
                i_objname = objname
            ).
          ENDLOOP.
        ENDIF.
      ELSEIF export = abap_true.
        zake-&gt;download_nugget_to_lm   = abap_false.
        zake-&gt;download_zip_to_lm_flag = abap_false.
        zake-&gt;create_slinkees( nuggetname ).
      ELSEIF build = abap_true.
        zake-&gt;download_nugget_to_lm   = abap_true.
        zake-&gt;download_zip_to_lm_flag = abap_true.
        zake-&gt;create_slinkees( nuggetname ).
      ELSEIF checkin = abap_true.

        IF testrun IS INITIAL.
          comment_str = comment.
          zake-&gt;checkin( comment_str ).
        ENDIF.
      ELSE.
      ENDIF.
    CATCH zcx_saplink INTO ex.
      message = ex-&gt;get_text( ).
      WRITE: / &apos;An Error occured: &apos;, message.
  ENDTRY.</source>
</PROG>
