<?xml version="1.0" encoding="utf-8"?>
<CLAS CLSNAME="ZCL_GEOCODE_YANDEX" VERSION="1" LANGU="E" DESCRIPT="Geocoding with Yandex" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 ">
 <types CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="MS_GEOCODER_RFC_DESTINATION" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " TYPTYPE="4" SRCROW1="4 " SRCCOLUMN1="4 " SRCROW2="8 " SRCCOLUMN2="37 " TYPESRC_LENG="175 " TYPESRC="BEGIN OF ms_geocoder_rfc_destination,
      srcid TYPE geosrcid,
      funcname TYPE funcname,
      rfc_destination TYPE rfcdest,
    END OF ms_geocoder_rfc_destination
"/>
 <implementing CLSNAME="ZCL_GEOCODE_YANDEX" REFCLSNAME="IF_GEOCODING_TOOL" VERSION="1" EXPOSURE="2" STATE="1" RELTYPE="1" EDITORDER="1 "/>
 <implementing CLSNAME="ZCL_GEOCODE_YANDEX" REFCLSNAME="ZIF_GEOCODE_YANDEX_CONST" VERSION="1" EXPOSURE="2" STATE="1" RELTYPE="1" EDITORDER="2 "/>
 <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
 <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
 <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
 <attribute CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GC_AIRPORT" VERSION="1" LANGU="E" ALIAS="X" EXPOSURE="0" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="0" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " REFCLSNAME="ZIF_GEOCODE_YANDEX_CONST" REFCMPNAME="GC_AIRPORT" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GC_AREA" VERSION="1" LANGU="E" ALIAS="X" EXPOSURE="0" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="0" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " REFCLSNAME="ZIF_GEOCODE_YANDEX_CONST" REFCMPNAME="GC_AREA" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GC_COUNTRY" VERSION="1" LANGU="E" ALIAS="X" EXPOSURE="0" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="0" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " REFCLSNAME="ZIF_GEOCODE_YANDEX_CONST" REFCMPNAME="GC_COUNTRY" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GC_DISTRICT" VERSION="1" LANGU="E" ALIAS="X" EXPOSURE="0" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="0" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " REFCLSNAME="ZIF_GEOCODE_YANDEX_CONST" REFCMPNAME="GC_DISTRICT" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GC_EXACT" VERSION="1" LANGU="E" ALIAS="X" EXPOSURE="0" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="0" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " REFCLSNAME="ZIF_GEOCODE_YANDEX_CONST" REFCMPNAME="GC_EXACT" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GC_HOUSE" VERSION="1" LANGU="E" ALIAS="X" EXPOSURE="0" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="0" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " REFCLSNAME="ZIF_GEOCODE_YANDEX_CONST" REFCMPNAME="GC_HOUSE" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GC_HYDRO" VERSION="1" LANGU="E" ALIAS="X" EXPOSURE="0" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="0" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " REFCLSNAME="ZIF_GEOCODE_YANDEX_CONST" REFCMPNAME="GC_HYDRO" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GC_LOCALITY" VERSION="1" LANGU="E" ALIAS="X" EXPOSURE="0" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="0" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " REFCLSNAME="ZIF_GEOCODE_YANDEX_CONST" REFCMPNAME="GC_LOCALITY" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GC_METRO" VERSION="1" LANGU="E" ALIAS="X" EXPOSURE="0" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="0" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " REFCLSNAME="ZIF_GEOCODE_YANDEX_CONST" REFCMPNAME="GC_METRO" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GC_NEAR" VERSION="1" LANGU="E" ALIAS="X" EXPOSURE="0" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="0" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " REFCLSNAME="ZIF_GEOCODE_YANDEX_CONST" REFCMPNAME="GC_NEAR" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GC_NUMBER" VERSION="1" LANGU="E" ALIAS="X" EXPOSURE="0" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="0" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " REFCLSNAME="ZIF_GEOCODE_YANDEX_CONST" REFCMPNAME="GC_NUMBER" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GC_OTHER" VERSION="1" LANGU="E" ALIAS="X" EXPOSURE="0" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="0" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " REFCLSNAME="ZIF_GEOCODE_YANDEX_CONST" REFCMPNAME="GC_OTHER" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GC_PROVINCE" VERSION="1" LANGU="E" ALIAS="X" EXPOSURE="0" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="0" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " REFCLSNAME="ZIF_GEOCODE_YANDEX_CONST" REFCMPNAME="GC_PROVINCE" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GC_RAILWAY" VERSION="1" LANGU="E" ALIAS="X" EXPOSURE="0" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="0" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " REFCLSNAME="ZIF_GEOCODE_YANDEX_CONST" REFCMPNAME="GC_RAILWAY" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GC_RANGE" VERSION="1" LANGU="E" ALIAS="X" EXPOSURE="0" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="0" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " REFCLSNAME="ZIF_GEOCODE_YANDEX_CONST" REFCMPNAME="GC_RANGE" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GC_ROUTE" VERSION="1" LANGU="E" ALIAS="X" EXPOSURE="0" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="0" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " REFCLSNAME="ZIF_GEOCODE_YANDEX_CONST" REFCMPNAME="GC_ROUTE" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GC_STREET" VERSION="1" LANGU="E" ALIAS="X" EXPOSURE="0" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="0" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " REFCLSNAME="ZIF_GEOCODE_YANDEX_CONST" REFCMPNAME="GC_STREET" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GC_VEGETATION" VERSION="1" LANGU="E" ALIAS="X" EXPOSURE="0" STATE="1" EDITORDER="0 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="0" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " REFCLSNAME="ZIF_GEOCODE_YANDEX_CONST" REFCMPNAME="GC_VEGETATION" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GV_XINFO" VERSION="1" LANGU="E" DESCRIPT="Additional Information for the Geocoder" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="GEOCDXINFO" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="M_BUFFER_RFC_DESTINATIONS" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="11 " SRCCOLUMN1="4 " SRCROW2="13 " SRCCOLUMN2="24 " TYPESRC_LENG="108 " TYPESRC="m_buffer_rfc_destinations
    TYPE SORTED TABLE OF ms_geocoder_rfc_destination
    WITH UNIQUE KEY srcid
"/>
 <interfaceMethod CLSNAME="ZCL_GEOCODE_YANDEX" CPDNAME="IF_GEOCODING_TOOL~GEOCODE">
  <source>method IF_GEOCODING_TOOL~GEOCODE.
**********************************************************************
*&amp; Method called by framework. Entry point for the geocoding.
**********************************************************************

  DATA:
    lv_msg                TYPE string,
    ls_geocd_ress         TYPE geocd_ress,
    ls_aesc_tabs          TYPE aesc_tabs,
    lt_geocd_choice       TYPE geocd_choice_table,
    lt_relevant_fields    TYPE geocd_addr_relfields_sortedtab.
  FIELD-SYMBOLS:
    &lt;ls_msg&gt;              TYPE aes_msg,
    &lt;ls_aes_addr&gt;         TYPE aes_addr.

  gv_xinfo = xinfo.

  LOOP AT addresses ASSIGNING &lt;ls_aes_addr&gt;.
    CLEAR: lt_geocd_choice, ls_aesc_tabs, ls_geocd_ress.
*   create a result entry
    ls_geocd_ress-id = &lt;ls_aes_addr&gt;-id.
*   remove corrected addresses with given ID
    DELETE TABLE corrected_addresses WITH TABLE KEY id = &lt;ls_aes_addr&gt;-id.
*   read container for geocoding result
    READ TABLE containers INTO ls_aesc_tabs
      WITH TABLE KEY id = &lt;ls_aes_addr&gt;-id.
    IF sy-subrc &lt;&gt; 0.
*     Message container has to exist. Otherwise return error.
      MESSAGE ID &apos;GEOCODING&apos; TYPE &apos;X&apos; NUMBER &apos;008&apos; INTO lv_msg.
      APPEND INITIAL LINE TO messages ASSIGNING &lt;ls_msg&gt;.
      &lt;ls_msg&gt;-id = &lt;ls_aes_addr&gt;-id.
      &lt;ls_msg&gt;-order_no = 1.
      MOVE-CORRESPONDING sy TO &lt;ls_msg&gt;-message.
      RETURN.
    ENDIF.
    me-&gt;geocode_one_address(
      EXPORTING
        address             = &lt;ls_aes_addr&gt;
      IMPORTING
        choice              = lt_geocd_choice
      CHANGING
        container           = ls_aesc_tabs
        RESULT              = ls_geocd_ress
        relevant_fields     = lt_relevant_fields
        messages            = messages
        corrected_addresses = corrected_addresses
    ).
    APPEND LINES OF lt_geocd_choice TO choice.
    APPEND ls_geocd_ress TO results.
    MODIFY TABLE containers FROM ls_aesc_tabs.
  ENDLOOP.
endmethod.</source>
 </interfaceMethod>
 <method CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="ADD_PART" VERSION="1" LANGU="E" DESCRIPT="Add a part to the URL" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="ADD_PART" SCONAME="IV_URL" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="ADD_PART" SCONAME="IV_SEP" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="ADD_PART" SCONAME="IV_PARAM" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="ADD_PART" SCONAME="RV_URL" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>METHOD add_part.
**********************************************************************
*&amp; Add the supplied part to the url.
**********************************************************************
  DATA:
    lv_param  TYPE string.

  rv_url = iv_url.

  IF iv_param IS NOT INITIAL.
    lv_param = iv_param.
    lv_param = cl_http_utility=&gt;escape_url( lv_param ).
    IF iv_sep IS NOT INITIAL.
      CONCATENATE rv_url iv_sep INTO rv_url.
    ENDIF.
    CONCATENATE rv_url lv_param INTO rv_url.
  ENDIF.
ENDMETHOD.                    &quot;ADD_PART</source>
 </method>
 <method CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="FIND_BY_PATH_RECURSIVE" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="9 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="FIND_BY_PATH_RECURSIVE" SCONAME="IR_NODE" VERSION="1" LANGU="E" DESCRIPT="IF_IXML_NODE" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_IXML_NODE"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="FIND_BY_PATH_RECURSIVE" SCONAME="IV_PATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="FIND_BY_PATH_RECURSIVE" SCONAME="RV_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>METHOD find_by_path_recursive.

  DATA: lr_node TYPE REF TO if_ixml_node,
        lr_item TYPE REF TO if_ixml_node,
        lr_list TYPE REF TO if_ixml_node_list,
        lv_name TYPE string,
        lv_path TYPE string,
        lv_length TYPE i,
        ind TYPE i.

  CHECK ir_node IS BOUND.
  lr_node = ir_node.
  lr_list = lr_node-&gt;get_children( ).
  lv_length = lr_list-&gt;get_length( ).
  WHILE ind &lt;= lv_length AND rv_value IS INITIAL.
    lr_item = lr_list-&gt;get_item( ind ).

    SPLIT iv_path AT &apos;\&apos; INTO lv_name lv_path.
    IF lv_name EQ lr_item-&gt;get_name( ).
      IF lv_path IS NOT INITIAL.
        rv_value = find_by_path_recursive( ir_node = lr_item iv_path = lv_path ).
      ELSE.
        rv_value = lr_item-&gt;get_value( ).
      ENDIF.
    ELSE.
      ADD 1 TO ind.
    ENDIF.
  ENDWHILE.


ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GEOCODE_ONE_ADDRESS" VERSION="1" LANGU="E" DESCRIPT="Geocode one address" EXPOSURE="1" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GEOCODE_ONE_ADDRESS" SCONAME="ADDRESS" VERSION="1" LANGU="E" DESCRIPT="Structure for Transferring Addresses to Enhancement Services" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="AES_ADDR"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GEOCODE_ONE_ADDRESS" SCONAME="CHOICE" VERSION="1" LANGU="E" DESCRIPT="Table with Address Selections for Geocoding" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="GEOCD_CHOICE_TABLE"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GEOCODE_ONE_ADDRESS" SCONAME="CONTAINER" VERSION="1" LANGU="E" DESCRIPT="Table structure for AES containers" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="AESC_TABS"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GEOCODE_ONE_ADDRESS" SCONAME="RESULT" VERSION="1" LANGU="E" DESCRIPT="Geo-Coding Events for Each Address" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="GEOCD_RESS"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GEOCODE_ONE_ADDRESS" SCONAME="RELEVANT_FIELDS" VERSION="1" LANGU="E" DESCRIPT="Table of All Fields Relevant for Display in Geocoding" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="GEOCD_ADDR_RELFIELDS_SORTEDTAB"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GEOCODE_ONE_ADDRESS" SCONAME="MESSAGES" VERSION="1" LANGU="E" DESCRIPT="Table with Messages Generated by the Addr. Enhancmnt Service" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="AES_MSG_TABLE"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GEOCODE_ONE_ADDRESS" SCONAME="CORRECTED_ADDRESSES" VERSION="1" LANGU="E" DESCRIPT="Table for Copying Addresses from/to Addr. Enhancemnt Service" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="AES_ADDR_SORTEDTABLE"/>
  <source>METHOD geocode_one_address.
**********************************************************************
*&amp; Start geocoding the supplied address
**********************************************************************
  DATA:
*   HTTP client
    lv_servicenr      TYPE          rfcdisplay-rfcsysid,
    lv_server         TYPE          rfcdisplay-rfchost,
    lv_proxy_host     TYPE          rfcdisplay-rfcgwhost,
    lv_proxy_service  TYPE          rfcdisplay-rfcgwserv,
    lr_client         TYPE REF TO   if_http_client,
*   General
    lv_dummy          TYPE          string,
    lv_timestamp      TYPE          string,
    ls_geocoding      TYPE          geocoding,
*   Access sequence
    ls_address        TYPE          aes_addr,
    lt_sequence       TYPE          string_table,
*   XML parser
    lv_response_data  TYPE          xstring,
    lr_ixml           TYPE REF TO   if_ixml,
    lr_parser         TYPE REF TO   if_ixml_parser,
    lr_streamfactory  TYPE REF TO   if_ixml_stream_factory,
    lr_istream        TYPE REF TO   if_ixml_istream,
    lr_document       TYPE REF TO   if_ixml_document,
    lr_place          TYPE REF TO	  if_ixml_node_collection,
    lr_iterator       TYPE REF TO   if_ixml_node_iterator,
    lr_item           TYPE REF TO   if_ixml_node,
    lv_kind           TYPE string,
    lv_precision      TYPE string,
    lv_pos            TYPE string,
    lv_longitude      TYPE string,
    lv_latitude       TYPE string,
    lv_count          TYPE i,
    lv_destination    TYPE rfcdest.

  DATA: lf_test       TYPE abap_bool.
  FIELD-SYMBOLS:
    &lt;lv_field&gt;        TYPE          any,
    &lt;lv_sequence&gt;     TYPE          string.

  CONSTANTS: lc_yandex_default TYPE rfcdest VALUE &apos;ZGEOCODE_YANDEX&apos;.

* If we got no country we should not be geocoding...

  CALL METHOD me-&gt;get_rfc_function
    EXPORTING
      srcid           = gv_xinfo-srcid
    IMPORTING
      rfc_destination = lv_destination.

  IF lv_destination IS INITIAL.
    lv_destination = lc_yandex_default.
  ENDIF.

  CALL FUNCTION &apos;RFC_READ_HTTP_DESTINATION&apos;
    EXPORTING
      destination             = lv_destination
    IMPORTING
      servicenr               = lv_servicenr
      server                  = lv_server
      proxy_host              = lv_proxy_host
      proxy_service           = lv_proxy_service
    EXCEPTIONS
      authority_not_available = 1
      destination_not_exist   = 2
      information_failure     = 3
      internal_failure        = 4
      no_http_destination     = 5.
  &quot; Fallback to Quickstart without maintaining a HTTP Destination
  IF sy-subrc = 2.
    lv_servicenr = &apos;80&apos;.
    lv_server    = &apos;geocode-maps.yandex.ru&apos;.
  ELSE.
    CHECK sy-subrc = 0.
  ENDIF.

  ls_address = address.

  lr_client = me-&gt;get_client( is_address        = ls_address
                              iv_servicenr      = lv_servicenr
                              iv_server         = lv_server
                              iv_proxy          = lv_proxy_host
                              iv_proxy_service  = lv_proxy_service ).

  lr_client-&gt;send( EXCEPTIONS OTHERS = 1 ).
  IF sy-subrc &lt;&gt; 0.
    EXIT.
  ENDIF.
  lr_client-&gt;receive( EXCEPTIONS OTHERS = 1 ).
  IF sy-subrc &lt;&gt; 0.
    EXIT.
  ENDIF.

  lv_response_data = lr_client-&gt;response-&gt;get_data( ).
  lr_client-&gt;close( ).
  IF lf_test EQ &apos;X&apos;.
* For test
    DATA: lv_test_string TYPE string.
    CALL FUNCTION &apos;CRM_IC_XML_XSTRING2STRING&apos;
      EXPORTING
        inxstring = lv_response_data
      IMPORTING
        outstring = lv_test_string.
  ENDIF.
*   Start XML parsing
*   Instanciate XML Parser
  lr_ixml = cl_ixml=&gt;create( ).
  lr_streamfactory = lr_ixml-&gt;create_stream_factory( ).
  lr_istream = lr_streamfactory-&gt;create_istream_xstring( lv_response_data ).
  lr_document = lr_ixml-&gt;create_document( ).
  lr_parser = lr_ixml-&gt;create_parser( stream_factory = lr_streamfactory
                                      istream        = lr_istream
                                      document       = lr_document ).
  lr_parser-&gt;parse( ).

*   Check if any results have been found
  lr_place = lr_document-&gt;get_elements_by_tag_name( name = &apos;featureMember&apos; ).
  lv_count = lr_place-&gt;get_length( ).
  IF lv_count &gt; 0.
*     Get lon/lat from XML
    lr_iterator = lr_place-&gt;create_iterator( ).
    lr_item = lr_iterator-&gt;get_next( ).

    WHILE lr_item IS BOUND.
      lv_kind = find_by_path_recursive( ir_node = lr_item iv_path = &apos;GeoObject\metaDataProperty\GeocoderMetaData\kind&apos; ).
      lv_precision = find_by_path_recursive( ir_node = lr_item iv_path = &apos;GeoObject\metaDataProperty\GeocoderMetaData\precision&apos; ).
      lv_pos = find_by_path_recursive( ir_node = lr_item iv_path = &apos;GeoObject\Point\pos&apos; ).

      IF lv_pos IS NOT INITIAL.
        SPLIT lv_pos AT space INTO lv_longitude lv_latitude.
        ls_geocoding-longitude = lv_longitude.
        ls_geocoding-latitude = lv_latitude.
        CASE lv_precision.
          WHEN gc_exact.
            ls_geocoding-precisid = &apos;1300&apos;. &quot;House number with supplement (e.g. Neurottstr. 7b)
          WHEN gc_number.
            ls_geocoding-precisid = &apos;1200&apos;. &quot;House number (exact)
          WHEN gc_near.
            ls_geocoding-precisid = &apos;1100&apos;. &quot;House number (interpolated)
          WHEN gc_range.
            ls_geocoding-precisid = &apos;1000&apos;. &quot;House number range (street section) mid-point
          WHEN gc_street.
            ls_geocoding-precisid = &apos;0900&apos;. &quot;Street mid-point
          WHEN gc_other.
            CASE lv_kind.
              WHEN gc_house.
                ls_geocoding-precisid = &apos;1200&apos;. &quot;House number (exact)
              WHEN gc_street.
                ls_geocoding-precisid = &apos;0900&apos;. &quot;Street mid-point
              WHEN gc_metro.
                ls_geocoding-precisid = &apos;0850&apos;. &quot;Metro /self-defined/
              WHEN gc_district.
                ls_geocoding-precisid = &apos;0800&apos;. &quot;District
              WHEN gc_locality.
                ls_geocoding-precisid = &apos;0700&apos;. &quot;City
              WHEN gc_area.
                ls_geocoding-precisid = &apos;0500&apos;. &quot;Town limits
              WHEN gc_province.
                ls_geocoding-precisid = &apos;0400&apos;. &quot;Region
              WHEN gc_country.
                ls_geocoding-precisid = &apos;0300&apos;. &quot;Coutnry
              WHEN gc_hydro
                OR gc_railway
                OR gc_route
                OR gc_vegetation
                OR gc_airport
                OR gc_other.
                ls_geocoding-precisid = &apos;0000&apos;. &quot;Other
              WHEN OTHERS.
                ls_geocoding-precisid = &apos;0000&apos;. &quot;Other
            ENDCASE.
          WHEN OTHERS.
        ENDCASE.

        GET TIME STAMP FIELD ls_geocoding-srctstmp.

        ls_geocoding-srcid = gv_xinfo-srcid.

        CALL METHOD move_data_to_aescontainer
          EXPORTING
            geocoding = ls_geocoding
          CHANGING
            aesc      = container-container.

        result-id = ls_address-id.
        result-res = 0. &quot;Everything&apos;s fine
      ENDIF.
      lr_item = lr_iterator-&gt;get_next( ).
    ENDWHILE.

  ENDIF.

  IF lv_count = 0.
    result-id = address-id.
    result-res = 6.
  ENDIF.


ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GET_CLIENT" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GET_CLIENT" SCONAME="IS_ADDRESS" VERSION="1" LANGU="E" DESCRIPT="Structure for Transferring Addresses to Enhancement Services" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="AES_ADDR"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GET_CLIENT" SCONAME="IV_SERVICENR" VERSION="1" LANGU="E" DESCRIPT="System ID" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="RFCDISPLAY-RFCSYSID"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GET_CLIENT" SCONAME="IV_SERVER" VERSION="1" LANGU="E" DESCRIPT="Name of Target Host" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="RFCDISPLAY-RFCHOST"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GET_CLIENT" SCONAME="IV_PROXY" VERSION="1" LANGU="E" DESCRIPT="Gateway Host Name" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="RFCDISPLAY-RFCGWHOST"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GET_CLIENT" SCONAME="IV_PROXY_SERVICE" VERSION="1" LANGU="E" DESCRIPT="Gateway service" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="RFCDISPLAY-RFCGWSERV"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GET_CLIENT" SCONAME="RR_CLIENT" VERSION="1" LANGU="E" DESCRIPT="HTTP Client Abstraction" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="IF_HTTP_CLIENT"/>
  <source>METHOD get_client.
  DATA:
    lv_proxy    TYPE            string,
    lv_proxy_s  TYPE            string,
    lv_url      TYPE            string,
    lv_enc      TYPE            string.


*  CONCATENATE &apos;http://&apos; iv_server &apos;/1.x/?format=json&amp;geocode=&apos; INTO lv_url.
  CONCATENATE &apos;http://&apos; iv_server &apos;/1.x/?geocode=&apos; INTO lv_url.


  lv_url = add_part( iv_url = lv_url iv_param = get_country( is_address-address ) ).
  lv_url = add_part( iv_url = lv_url iv_param = is_address-address-city1 iv_sep = &apos;,+&apos;).
  lv_url = add_part( iv_url = lv_url iv_param = is_address-address-city2 iv_sep = &apos;,+&apos;).
  lv_url = add_part( iv_url = lv_url iv_param = is_address-address-street iv_sep = &apos;,+&apos; ).
  lv_url = add_part( iv_url = lv_url iv_param = is_address-address-house_num1 iv_sep = &apos;,+&apos; ).
  lv_url = add_part( iv_url = lv_url iv_param = is_address-address-house_num2 iv_sep = &apos;,+&apos; ).

  CONDENSE lv_url.

  lv_proxy = iv_proxy.
  lv_proxy_s = iv_proxy_service.

  cl_http_client=&gt;create_by_url(
    EXPORTING
      url           = lv_url
      proxy_host    = lv_proxy
      proxy_service = lv_proxy_s
    IMPORTING
      client        = rr_client
    EXCEPTIONS
      argument_not_found = 1
      plugin_not_active  = 2
      internal_error     = 3
      OTHERS             = 4 ).
ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GET_COUNTRY" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="7 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GET_COUNTRY" SCONAME="IS_ADDRESS" VERSION="1" LANGU="E" DESCRIPT="Structure for Transferring Addresses to Enhancement Services" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ADRC_STRUC"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GET_COUNTRY" SCONAME="I_SPRAS" VERSION="1" LANGU="E" DESCRIPT="sy-langu" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SPRAS" PAROPTIONL="X"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GET_COUNTRY" SCONAME="IS_INFO" VERSION="1" LANGU="E" DESCRIPT="Additional Information for the Geocoder" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="GEOCDXINFO" PAROPTIONL="X"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GET_COUNTRY" SCONAME="E_COUNTRY" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>METHOD get_country.

  DATA lv_country TYPE land1.
  DATA lv_landx TYPE landx.
  DATA lv_spras TYPE spras.

  IF is_address-country IS NOT INITIAL.
    lv_country = is_address-country.
  ELSE.
    lv_country = is_info-country.
  ENDIF.
  CHECK lv_country IS NOT INITIAL.

  IF is_info-language IS NOT INITIAL.
    lv_spras = is_info-language.
  ELSE.
    lv_spras = i_spras.
  ENDIF.

  CLEAR lv_landx.
  SELECT SINGLE landx landx50 FROM t005t INTO (lv_landx, e_country) WHERE land1 = lv_country
                                                  AND spras = lv_spras.
  IF e_country IS INITIAL AND lv_landx IS NOT INITIAL.
    e_country = lv_landx.
  ELSEIF sy-subrc NE 0.
    CLEAR e_country.
  ENDIF.

ENDMETHOD.                    &quot;GET_COUNTRY</source>
 </method>
 <method CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GET_REGION" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="8 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GET_REGION" SCONAME="I_SPRAS" VERSION="1" LANGU="E" DESCRIPT="Language Key" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SPRAS" PARVALUE="SY-LANGU"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GET_REGION" SCONAME="IS_ADDRESS" VERSION="1" LANGU="E" DESCRIPT="Include structure with ADRC attributes without name fields" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ADRC_STRUC"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GET_REGION" SCONAME="IS_INFO" VERSION="1" LANGU="E" DESCRIPT="Additional Information for the Geocoder" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="GEOCDXINFO" PAROPTIONL="X"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GET_REGION" SCONAME="E_REGION" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>METHOD GET_REGION.

  DATA l_country TYPE land1.

  IF is_address-country IS NOT INITIAL.
    l_country = is_address-country.
  ELSE.
    l_country = is_info-country.
  ENDIF.

  CHECK l_country IS NOT INITIAL AND is_address-region IS NOT INITIAL.

  SELECT SINGLE bezei FROM t005u INTO e_region WHERE spras = i_spras
                                                 AND land1 = is_address-country
                                                 AND bland = is_address-region.
  IF sy-subrc &lt;&gt; 0.
    CLEAR e_region.
  ENDIF.

ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GET_RFC_FUNCTION" VERSION="1" LANGU="E" DESCRIPT="Besorgt zu gegebener SRCID die RFC_DESTINATION und Funktion" EXPOSURE="1" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GET_RFC_FUNCTION" SCONAME="SRCID" VERSION="1" LANGU="E" DESCRIPT="ID des Geokodierers" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="GEOSRCID"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GET_RFC_FUNCTION" SCONAME="FUNCNAME" VERSION="1" LANGU="E" DESCRIPT="Funktionsname an der RFC Destinantion" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="FUNCNAME"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="GET_RFC_FUNCTION" SCONAME="RFC_DESTINATION" VERSION="1" LANGU="E" DESCRIPT="RFC Destination des Geokodierers" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="RFCDEST"/>
  <source>method GET_RFC_FUNCTION .
data:
  lv_rfc_destination type MS_GEOCODER_RFC_DESTINATION,
  lv_geocd2cls type geocd2cls.

* initialize result
  clear rfc_destination.

* try to read from buffer
  read table m_buffer_rfc_destinations into lv_rfc_destination
    with table key srcid = srcid.

  if sy-subrc &lt;&gt; 0.
*   not in buffer yet, so read from db
    select single * from geocd2cls into lv_geocd2cls
      where srcid = srcid.
    if sy-subrc &lt;&gt; 0.
*     Nothing found? Customizing error.
      exit.
    endif.

*   insert new rfc_destination into buffer
    lv_rfc_destination-srcid = srcid.
    lv_rfc_destination-funcname = lv_geocd2cls-funcname.
    lv_rfc_destination-rfc_destination = lv_geocd2cls-rfc_dest.
    insert lv_rfc_destination into table m_buffer_rfc_destinations.
  endif.

* return result
  funcname        = lv_rfc_destination-funcname.
  rfc_destination = lv_rfc_destination-rfc_destination.

endmethod.</source>
 </method>
 <method CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="MOVE_DATA_TO_AESCONTAINER" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="MOVE_DATA_TO_AESCONTAINER" SCONAME="GEOCODING" VERSION="1" LANGU="E" DESCRIPT="Data That Was Exchanged by the Geo-Coding Services" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="GEOCODING"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="MOVE_DATA_TO_AESCONTAINER" SCONAME="AESC" VERSION="1" LANGU="E" DESCRIPT="Address Enhancement Service Container" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="AESC"/>
  <source>method MOVE_DATA_TO_AESCONTAINER.
  DATA:
    lv_aesc_struc TYPE aesc_struc,
    lv_value TYPE char255.
  lv_value = geocoding-longitude.
  CALL METHOD move_field_to_aescontainer
    EXPORTING
      field = &apos;LONGITUDE&apos;
      value = lv_value
    CHANGING
      aesc  = aesc.
  lv_value = geocoding-latitude.
  CALL METHOD move_field_to_aescontainer
    EXPORTING
      field = &apos;LATITUDE&apos;
      value = lv_value
    CHANGING
      aesc  = aesc.
  lv_value = geocoding-altitude.
  CALL METHOD move_field_to_aescontainer
    EXPORTING
      field = &apos;ALTITUDE&apos;
      value = lv_value
    CHANGING
      aesc  = aesc.
  lv_value = geocoding-srcid.
  CALL METHOD move_field_to_aescontainer
    EXPORTING
      field = &apos;SRCID&apos;
      value = lv_value
    CHANGING
      aesc  = aesc.
  lv_value = geocoding-srctstmp.
  CALL METHOD move_field_to_aescontainer
    EXPORTING
      field = &apos;SRCTSTMP&apos;
      value = lv_value
    CHANGING
      aesc  = aesc.
  lv_value = geocoding-precisid.
  CALL METHOD move_field_to_aescontainer
    EXPORTING
      field = &apos;PRECISID&apos;
      value = lv_value
    CHANGING
      aesc  = aesc.
  lv_value = geocoding-tzone.
  CALL METHOD move_field_to_aescontainer
    EXPORTING
      field = &apos;TZONE&apos;
      value = lv_value
    CHANGING
      aesc  = aesc.
endmethod.</source>
 </method>
 <method CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="MOVE_FIELD_TO_AESCONTAINER" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="MOVE_FIELD_TO_AESCONTAINER" SCONAME="FIELD" VERSION="1" LANGU="E" DESCRIPT="Field Name" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="FIELDNAME"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="MOVE_FIELD_TO_AESCONTAINER" SCONAME="VALUE" VERSION="1" LANGU="E" DESCRIPT="Char255" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CHAR255"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="MOVE_FIELD_TO_AESCONTAINER" SCONAME="AESC" VERSION="1" LANGU="E" DESCRIPT="Address Enhancement Service Container" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="AESC"/>
  <source>method MOVE_FIELD_TO_AESCONTAINER.
  DATA:
    lv_aesc_struc TYPE aesc_struc,
    lv_value TYPE char255.
  lv_value = value. &quot;remove spaces
  CONDENSE lv_value.
  READ TABLE aesc INTO lv_aesc_struc
    WITH KEY service = &apos;GEOCODING&apos;
             field   = field.
  IF sy-subrc &lt;&gt; 0.
    lv_aesc_struc-service = &apos;GEOCODING&apos;.
    lv_aesc_struc-field   = field.
    lv_aesc_struc-value   = lv_value.
    INSERT lv_aesc_struc INTO TABLE aesc.
  ELSE.
    lv_aesc_struc-value   = lv_value.
    MODIFY TABLE aesc FROM lv_aesc_struc TRANSPORTING value.
  ENDIF.
endmethod.</source>
 </method>
 <method CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="STRING_TO_TIMESTAMP" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="STRING_TO_TIMESTAMP" SCONAME="TIMESTAMP_STRING" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PARVALUE="&apos;Sun, 14 Mar 10 20:34:15 +0000&apos;"/>
  <parameter CLSNAME="ZCL_GEOCODE_YANDEX" CMPNAME="STRING_TO_TIMESTAMP" SCONAME="TIMESTAMP" VERSION="1" LANGU="E" DESCRIPT="UTC Time Stamp in Short Form (YYYYMMDDhhmmss)" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="TIMESTAMP"/>
  <source>method STRING_TO_TIMESTAMP.
  DATA: day TYPE char2,
        month TYPE char3,
        month_names TYPE TABLE OF t247,
        month_name LIKE LINE OF month_names,
        language TYPE langu VALUE &apos;E&apos;,
        year TYPE char2,
        time_string TYPE string,
        time TYPE uzeit,
        timestamp_tmp TYPE string.
  day = timestamp_string+5(2).
  month = timestamp_string+8(3).
  year = timestamp_string+12(2).
  time_string = timestamp_string+15(8).
  REPLACE ALL OCCURRENCES OF &apos;:&apos; IN time_string WITH &apos;&apos;.
  WRITE time_string TO time.
  CALL FUNCTION &apos;MONTH_NAMES_GET&apos;
    EXPORTING
      language    = language
    TABLES
      month_names = month_names.
  READ TABLE month_names INTO month_name
    WITH KEY ktx = month.
  CONCATENATE &apos;20&apos; year month_name-mnr day time INTO timestamp_tmp.
  timestamp = timestamp_tmp.
endmethod.</source>
 </method>
</CLAS>
